version: "3.9"

services:
  adempiere.db:
    build:
      context: postgresql/
      dockerfile: Dockerfile
    container_name: ${POSTGRES_NAME}
    image: ${POSTGRES_NAME}
    restart: ${GENERIC_RESTART}
    ports:
      - ${POSTGRES_PORT}
    volumes:
      - volume_postgres:/var/lib/postgresql/data
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/5432; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - adempiere_network
      
  adempiere-zk:
    image: ${ADEMPIERE_ZK_IMAGE}
    container_name: ${ADEMPIERE_NAME}
    restart: ${GENERIC_RESTART}
    ports:
      - ${ADEMPIERE_ZK_PORT}:8080
    environment:
      ADEMPIERE_DB_SERVER: ${POSTGRES_NAME} #adempiere.db
    depends_on:
      adempiere.db:
        condition: service_healthy
    networks:
      - adempiere_network 

  adempiere-site:
    image: ${ADEMPIERE_SITE_IMAGE}
    container_name: ${ADEMPIERE_SITE}
    restart: ${GENERIC_RESTART}
    ports:
      - ${ADEMPIERE_SITE_PORT}:80
    environment:
      ZK_HOST: ${ZK_HOST}:${ADEMPIERE_ZK_PORT}
      VUE_HOST: ${VUE_HOST}:${VUE_UI_PORT}
    depends_on:
      - adempiere-zk
    networks:
      - adempiere_network 
      
  adempiere-middleware:
    image: ${ADEMPIERE_MIDDLEWARE_IMAGE}
    container_name: ${MIDDLEWARE_HOST}
    restart: ${GENERIC_RESTART}
    ports:
      - 50059
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/50059; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      DB_HOST: ${POSTGRES_NAME}
      SERVER_PRIVATE_KEY: ${SERVER_PRIVATE_KEY}
    depends_on:
      adempiere.db:
        condition: service_healthy
    networks:
      - adempiere_network
      
  adempiere-backend-rs:
    image: ${ADEMPIERE_BACKEND_RS_IMAGE}
    container_name: ${ADEMPIERE_BACKEND_RS_HOST}
    restart: ${GENERIC_RESTART}
    ports:
      - ${ADEMPIERE_BACKEND_RS_PORT}:7878
    environment:
      MIDDLEWARE_HOST: http://${MIDDLEWARE_HOST}:50059
    depends_on:
      adempiere-middleware:
        condition: service_healthy
    networks:
      - adempiere_network
  
  adempiere-scheduler:
    image: ${ADEMPIERE_SCHEDULER_IMAGE}
    container_name: ${ADEMPIERE_SCHEDULER_HOST}
    restart: ${GENERIC_RESTART}
    ports:
      - ${ADEMPIERE_SCHEDULER_PORT}:8080
    command:
      - "agent"
      - "--bootstrap-expect=1"
      - "--node-name=node1"
      - "--server"
    networks:
      - adempiere_network
      
  adempiere-grpc-server:
    image: ${ADEMPIERE_GRPC_SERVER_IMAGE}
    container_name: ${VUE_BACKEND_HOST}
    restart: ${GENERIC_RESTART}
    ports:
      - 50059
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/50059; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      DB_HOST: ${POSTGRES_NAME}
      SECRET_KEY: ${SECRET_KEY}
      SERVICES_ENABLED: ${SERVICES_ENABLED}
    depends_on:
      adempiere.db:
        condition: service_healthy
    networks:
      - adempiere_network

  vue-api:
    image: ${VUE_API_IMAGE}
    container_name: ${VUE_API_HOST}
    restart: ${GENERIC_RESTART}
    ports:
      - ${VUE_API_PORT}:8085
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/$(hostname)/8085; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      ES_HOST: ${ES_HOST}
      ES_PORT: ${ES_PORT}
      AD_ACCESSHOST: ${VUE_BACKEND_HOST}
      AD_STORE_ACCESS_HOST: ${VUE_BACKEND_HOST}
      AD_BUSINESSHOST: ${VUE_BACKEND_HOST}
      AD_DICTIONARYHOST: ${VUE_BACKEND_HOST}
      AD_ACCESSAPIHOST: ${VUE_BACKEND_HOST}
      AD_STORE_HOST: ${VUE_BACKEND_HOST}
      AD_DEFAULT_HOST: ${VUE_BACKEND_HOST}
      VS_ENV: ${VS_ENV}
      INDEX: ${INDEX}
    depends_on:
      adempiere-grpc-server:
        condition: service_healthy
    networks:
      - adempiere_network
      
  vue-ui:
    image: ${VUE_UI_IMAGE}
    container_name: ${VUE_UI_HOST}
    restart: ${GENERIC_RESTART}
    ports:
      - ${VUE_UI_PORT}:80
    environment:
      API_URL: http://${VUE_UI_URL}:${VUE_API_PORT}
    networks:
      - adempiere_network
      
networks:
  adempiere_network:
    name: ${ADEMPIERE_NETWORK}
    
volumes:
  volume_postgres:
    name: ${POSTGRES_NETWORK}
